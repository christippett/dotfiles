[include]
path = ~/.gitconfig-user

[color]
# Colour terminal command output when possible.
ui = auto

[gist]
# Open GitHub Gist in browser after submission.
browse = true

[push]
# Push to the set upstream branch being tracked by default.
default = simple

[pull]
# Default to rebasing on pulls
rebase = true

[fetch]
# Always prune when fetching (and pulling).
prune = 1

[rerere]
# Store and re-use manual conflict resolution changes.
enabled = 1

[core]
# Exclude everything in this file. Used for general exclusions.
excludesfile = ~/.gitignore
# Set attributes on files. Used for general diff improvements.
attributesfile = ~/.gitattributes
# Don't prompt for commit messages for merge commits.
mergeoptions = --no-edit
commitGraph = true

[help]
# Autocorrect mistyped commands.
autocorrect = 1

[alias]
# Unstage the changes in a given file.
unstage = reset HEAD --
# View the current changes in the staging area.
staged = diff --cached
# Print the name of the current branch.
current-branch = symbolic-ref --short HEAD
# Print the name of the current upstream tracking branch.
upstream = !git config --get branch.$(git current-branch).remote || echo origin
# Cherry-pick a commit with your signature.
sign = cherry-pick --signoff
# Fetch all branches and rebase the current branch against
# upstream/master.
rebase-against-master = !git fetch --all && git rebase $(git upstream)/master
# Push the current branch upstream to origin using the same branch
# name for the remote branch.
upstream-current-branch = !git push --set-upstream origin $(git current-branch)
# Create a pull request on GitHub using the `hub` command.
pull-request = !rm -f .git/PULLREQ_EDITMSG && hub pull-request -o
# Upstream the current branch to origin and create a pull request
# on GitHub.
upstream-and-pull-request = !git upstream-current-branch && git pull-request

[apply]
# Cleanup whitespace by default when apply patches.
whitespace = fix

[rebase]
# Run `git stash` if needed before a `git rebase`
autoStash = true
# Auto-add `--autosquash` to `git rebase`
autoSquash = true

[url "git@github.com:"]
# Always use GitHub SSH protocol to push.
# Allows use of git:// for public repositories with push access
pushInsteadOf = git://github.com/

[url "https://github.com/"]
# Use HTTP for GitHub instead of git:// or git@
# Enable this in networks where git:// or git@ are blocked.
#insteadOf = git://github.com/
#insteadOf = git@github.com:

[url "git@github.com:"]
# Use SSH for GitHub instead of https://
# Enable this in networks where https:// has issues.
#insteadOf = https://github.com/

[credential]
# Use macOS Keychain to store HTTP passwords.
helper = osxkeychain

[hub]
protocol = https

[commit]
# Show the diff as a comment in the commit message template.
verbose = true

[credential "https://source.developers.google.com"]
helper = gcloud

