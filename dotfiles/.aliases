#!/usr/bin/env bash

# get machine type - https://stackoverflow.com/a/3466183
osType="$(uname -s)"

# identify where environment is running as windows subsystem for linux - https://stackoverflow.com/a/38859331
function is_wsl() {
	grep -E -q -m 1 microsoft /proc/version 2>/dev/null || false
}

### enable aliases to be sudo‚Äôed
#
#   http://askubuntu.com/questions/22037/aliases-not-available-when-using-sudo
alias sudo="sudo "
alias please="sudo"
alias pls="sudo"
alias plz="sudo"

### cli tool overrides
#
alias rake='noglob rake' # allow use of unescaped *[] in terminal
alias mkdir="mkdir -vp"
alias df="df -H"
alias rm="rm -iv"
alias mv="mv -iv"
alias cp="cp -irv"
alias grep="grep --color=auto"
alias make="nice make"
# replace cat with the bat - https://github.com/sharkdp/bat
alias cat="bat"
# replace ping with prettyping - https://github.com/denilsonsa/prettyping
alias ping="prettyping"
# replace top with htop - http://hisham.hm/htop/
alias top="htop"
# replace du with ncdu - https://dev.yorhel.nl/ncdu
alias du="ncdu --color dark -rr -x --exclude .git --exclude node_modules"

### clipboard
#
if [[ $osType == *"Darwin"* ]]; then
	alias copy="pbcopy"
elif is_wsl; then
	alias copy="clip.exe"
fi

### ubuntu update & upgrade
#
alias uu="sudo apt-get update && sudo apt-get upgrade -y"
alias uua="sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get autoremove -y"

### safety
#
# Avoid stupidity with trash-cli: using https://github.com/sindresorhus/trash-cli
# or use default rm -i if trash is not installed
if type trash &>/dev/null; then
	alias rm="trash"
else
	alias rm="rm -i"
fi

### git
#
alias lg="git log --all --decorate --oneline --graph"

# gcloud
alias gcurl='curl --header "Authorization: Bearer $(gcloud auth print-identity-token)"'

### navigation
#
# go to the /home/$USER (~) directory and clears window of your terminal
alias q="cd ~ && clear"
#
[ -d ~/Pictures ] && alias pic="cd ~/Pictures"
[ -d ~/projects ] && alias pj="cd ~/projects"

### folders
#
alias ll="ls -alF"
alias la="ls -A"
alias l="ls -CF"

### gcloud
function gssh() {
	readonly local name="$1"
	local filter result instance_name zone
	printf "üñ•Ô∏è   Connecting to instance: %s\\n\\n" "$name"
	filter="(name:${1} AND status:RUNNING)"
	result="$(gcloud compute instances list --sort-by=-createTime --format="value(name,zone)" --filter="$filter")"
	instance_name="$(echo "$result" | awk 'NR==1 {print $1}')"
	zone="$(echo "$result" | awk 'NR==1 {print $2}')"
	if [ -n "$instance_name" ]; then
		gcloud beta compute ssh "$name" --zone "$(basename "$zone")"
	else
		printf "‚ùå  Instance not found\\n"
	fi
}

### terraform
#
function tfapply() {
	opts=()
	if [[ $1 =~ -[a-z]*a ]]; then
		opts+=("-auto-approve")
	fi
	if [[ $1 =~ -[a-z]*q ]]; then
		opts+=("-refresh=false")
	fi
	if [[ -f "./terraform.tfvars" ]]; then
		opts+=("-var-file=terraform.tfvars")
	fi
	terraform apply -compact-warnings -parallelism=25 "${opts[@]}"
}
alias tfplan="terraform plan -compact-warnings -parallelism=25"

### colors
#
function colorgrid() {
	iter=16
	while [ $iter -lt 52 ]; do
		second=$((iter + 36))
		third=$((second + 36))
		four=$((third + 36))
		five=$((four + 36))
		six=$((five + 36))
		seven=$((six + 36))
		if [ $seven -gt 250 ]; then seven=$((seven - 251)); fi

		echo -en "\033[38;5;${iter}m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà "
		printf "%03d" $iter
		echo -en "   \033[38;5;${second}m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà "
		printf "%03d" $second
		echo -en "   \033[38;5;${third}m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà "
		printf "%03d" $third
		echo -en "   \033[38;5;${four}m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà "
		printf "%03d" $four
		echo -en "   \033[38;5;${five}m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà "
		printf "%03d" $five
		echo -en "   \033[38;5;${six}m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà "
		printf "%03d" $six
		echo -en "   \033[38;5;${seven}m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà "
		printf "%03d" $seven

		iter=$((iter + 1))
		printf '\r\n'
	done
}

### PATH
#
# pretty print $PATH
alias path='print -l $path'
alias fpath='print -l $fpath'

### download
#
# web page with all assets
alias getpage="wget --no-clobber --page-requisites --html-extension --convert-links --no-host-directories"
# file with original filename
alias get="curl -O -L"
